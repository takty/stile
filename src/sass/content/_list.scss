/**
 *
 * Content Style - List (SCSS)
 *
 * @author Takuto Yanagida @ Space-Time Inc.
 * @version 2018-05-05
 *
 */


$list-color-mark      : rgba(#777, 0.9) !default;
$list-rate-mark       : 0.45 !default;
$list-rate-square-mark: 0.44 !default;

$stile-size-unit: 0.9rem !default;
@function vr($val) {@return $val * $stile-size-unit;}


@mixin stile-list {

	@include stile-ul;
	@include stile-ol;
	@include stile-dl;

}

@mixin stile-list-main {

	@include stile-ul-main;
	@include stile-ol-main;
	@include stile-dl-main;

}

@mixin stile-list-color($list-color-mark) {

	@include stile-ul-color($list-color-mark);
	@include stile-ol-color($list-color-mark);
	@include stile-dl-color($list-color-mark);

}


// -----------------------------------------------------------------------------

@mixin stile-ul {

	@include stile-ul-main;
	@include stile-ul-color($list-color-mark);

}

@mixin stile-ol {

	@include stile-ol-main;
	@include stile-ol-color($list-color-mark);

}

@mixin stile-dl {

	@include stile-dl-main;
	@include stile-dl-color($list-color-mark);

}


// -----------------------------------------------------------------------------

@mixin stile-ul-main {

	ul:not([class]),
	ul.stile {

		&:not([data-style~='no-indent']) {
			padding-left: vr(4);
		}

		> li {
			position: relative;
			line-height: vr(2);
		}

		> li::before {
			content: '';
			position: absolute;
			display: block;
			box-sizing: border-box;

			top: calc(#{vr(1)} - 0.01rem);
			left: - vr(2);

			width: 1em;
			height: 1em;
		}

		&:not([data-list-style-type]) > li::before,
		&[data-list-style-type='disc'] > li::before {
			transform: translateY(-0.5em) scale(#{$list-rate-mark});
			border-radius: 50%;
		}

		&[data-list-style-type='circle'] > li::before {
			transform: translateY(-0.5em) scale(#{$list-rate-mark});
			border: 0.2rem solid;
			border-radius: 50%;
		}

		&[data-list-style-type='square'] > li::before {
			transform: translateY(-0.5em) scale(#{$list-rate-square-mark});
			border-radius: 20%;
		}
	}

	ul[style]:not([class]) {  // for suppressing that list marks are shown before JS executed.
		list-style: none !important;
	}

}

@mixin stile-ul-color($list-color-mark) {

	ul:not([class]),
	ul.stile {
		&:not([data-list-style-type]) > li::before,
		&[data-list-style-type='disc'] > li::before {
			background-color: $list-color-mark;
		}

		&[data-list-style-type='circle'] > li::before {
			border-color: $list-color-mark;
		}

		&[data-list-style-type='square'] > li::before {
			background-color: $list-color-mark;
		}
	}

}


// -----------------------------------------------------------------------------

@mixin stile-ol-main {

	ol:not([class]),
	ol.stile {

		&:not([data-style~='no-indent']) {
			padding-left: vr(1);
		}

		> li {
			counter-increment: li;
			display: table-row;
			line-height: vr(2);
		}

		> li::before {
			content: counter(li) '.';
			display: table-cell;

			min-width: vr(3);
			padding-right: vr(1);
			text-align: right;

			@include font-bold;
		}

		&[data-list-style-type='lower-alpha'] > li::before {
			content: counter(li, lower-alpha) '.';
		}

		&[data-list-style-type='lower-greek'] > li::before {
			content: counter(li, lower-greek) '.';
		}

		&[data-list-style-type='lower-roman'] > li::before {
			content: counter(li, lower-roman) '.';
		}

		&[data-list-style-type='upper-alpha'] > li::before {
			content: counter(li, upper-alpha) '.';
		}

		&[data-list-style-type='upper-roman'] > li::before {
			content: counter(li, upper-roman) '.';
		}
	}

}

@mixin stile-ol-color($list-color-mark) {

	ol:not([class]),
	ol.stile {
		> li::before { color: $list-color-mark; }
	}
}



// -----------------------------------------------------------------------------

@mixin stile-dl-main {

	dl:not([class]),
	dl.stile {

		&:not([data-style~='no-indent']) {
			padding-left: vr(2);
		}

		line-height: vr(2);

		> dt { @include font-bold; }

		> dd { padding-left: vr(2); }
	}

}

@mixin stile-dl-color($list-color-mark) {

	dl:not([class]),
	dl.stile {
		> dt { color: $list-color-mark; }
	}

}
